syntax = "proto3";

enum ListRetrieval {
    LR_NA = 0;
    LR_ARRAY_LIKE = 1;
    LR_ITERATOR = 2;
}

message TopologyTrait {
    bool grin_assume_has_directed_graph = 1;
    bool grin_assume_has_undirected_graph = 2;
    bool grin_assume_has_multi_edge_graph = 3;
    bool grin_with_vertex_original_id = 4;
    bool grin_with_vertex_data = 5;
    bool grin_with_edge_data = 6;
    repeated ListRetrieval vertex_list_retrievals = 7;
    repeated ListRetrieval edge_list_retrievals = 8;
    repeated ListRetrieval adjacent_list_retrievals = 9;
}

enum GraphPartitionStrategy {
    GPS_NA = 0;
    GPS_ALL_DUPLICATE = 1;
    GPS_EDGE_CUT = 2;
    GPS_VERTEX_CUT = 3;
    GPS_HYBRID_CUT = 4;
}

message PartitionTrait {
    GraphPartitionStrategy graph_partition_strategy = 1;
    bool grin_triat_natural_id_for_partition = 2;
    bool grin_enable_vertex_ref = 3;
    bool grin_enable_edge_ref = 4;
}

enum LocalCompleteAssumption {
    LCA_NA = 0;
    LCA_ALL_VERTEX_DATA = 1;
    LCA_MASTER_VERTEX_DATA = 2;
    LCA_ALL_EDGE_DATA = 3;
    LCA_MASTER_EDGE_DATA = 4;
    LCA_ALL_VERTEX_NEIGHBOR = 5;
    LCA_MASTER_VERTEX_NEIGHBOR = 6;
}

message PropertyTrait {
    
}

message StorageTrait {
    oneof specific_trait {
        TopologyTrait topology_trait = 1;
        PartitionTrait partition_trait = 2;
        PropertyTrait property_trait = 3;
    }
}


message Storage {
    optional string name = 1;
    optional int32 version = 2;
    optional int32 grin_version = 3;

    optional ListRetrieval vertex_list_retrieval = 4;
    optional ListRetrieval edge_list_retrieval = 5;
    optional ListRetrieval adjacent_list_retrieval = 6;
    
    repeated StorageTrait traits = 7;
}

message Graph {
    string uri = 1;
    string grin_version = 2;
    repeated StorageTrait traits = 3;
    Statistics statistics = 4;
}
