Property APIs
--------------

Get Vertex Property Value
^^^^^^^^^^^^^^^^^^^^^^^^^^^^
GRIN provides APIs to get a single property value of a vertex, as well as all the property values
of a vertex as a row.

::

    GRIN_ROW row = grin_get_vertex_row(g, v);
    
    GRIN_VERTEX_TYPE vtype = grin_get_vertex_type(g, v);
    GRIN_VERTEX_PROPERTY_LIST vpl = grin_get_vertex_property_list_by_type(g, vtype);
    size_t vpl_sz = grin_get_vertex_property_list_size(g, vpl);

    for (size_t i = 0; i < vpl_sz; ++i) {
        GRIN_VERTEX_PROPERTY vprop = grin_get_vertex_property_from_list(g, vpl, i);
        GRIN_DATATYPE dt = grin_get_vertex_property_datatype(g, vprop);

        if (dt == Int64) {
            long long int value = grin_get_vertex_property_value_of_int64(g, v, vprop);
            long long int value1 = grin_get_int64_from_row(g, row, i);
            // use the value
        } else if (dt == String) {
            const char* value = grin_get_vertex_property_value_of_string(g, v, vprop);
            const char* value1 = grin_get_string_from_row(g, row, i);
            // use the value
            grin_destroy_string_value(g, value);
            grin_destroy_string_value(g, value1);
        } else ...
    }


Primary Key 
^^^^^^^^^^^^
GRIN explicitly distinguishs the concepts of primary keys and indexing based on primary keys.
Primary keys are the properties that are used to identify a vertex or an edge.
Just like in relational databases, primary keys are unique under a given vertex or edge type.
While indexing based on primary keys is the ability to find a vertex or an edge by its primary key.
These two sets of APIs are defined in ``property/primarykey.h`` and ``index/pk.h`` respectively.
Indexing with PK is discussed in the index section.

Getting the PK of a vertex is very similar to getting the value of a property.
Users should first get a row for the values of PK properties using the API
``GRIN_ROW grin_get_vertex_primary_keys_row(GRIN_GRAPH g, GRIN_VERTEX v)``,
and then get values from the row one-by-one.



    





